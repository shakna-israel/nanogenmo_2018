#!/bin/sh

gen_name_diagram() {
  # Grab a random twochar selection from the dictionary, and lowercase it.
  val=$(cat /usr/share/dict/words | cut -c-2 | uniq | shuf -n1 | tr '[:upper:]' '[:lower:]')
  # If we got something nonenglish, retry.
  while [ "$val" = 'bq' ] || [ "$val" = 'bz' ] ||
  [ "$val" = 'cf' ] || [ "$val" = 'cj' ] || [ "$val" = 'cv' ] ||
  [ "$val" = 'cx' ] || [ "$val" = 'fq' ] || [ "$val" = 'fv' ] ||
  [ "$val" = 'fx' ] || [ "$val" = 'fz' ] || [ "$val" = 'gq' ] ||
  [ "$val" = 'gv' ] || [ "$val" = 'gx' ] || [ "$val" = 'hx' ] ||
  [ "$val" = 'hz' ] || [ "$val" = 'jb' ] || [ "$val" = 'jd' ] ||
  [ "$val" = 'jf' ] || [ "$val" = 'jg' ] || [ "$val" = 'jh' ] ||
  [ "$val" = 'jl' ] || [ "$val" = 'jm' ] || [ "$val" = 'jp' ] ||
  [ "$val" = 'jq' ] || [ "$val" = 'jr' ] || [ "$val" = 'js' ] ||
  [ "$val" = 'jt' ] || [ "$val" = 'jv' ] || [ "$val" = 'jw' ] ||
  [ "$val" = 'jx' ] || [ "$val" = 'jy' ] || [ "$val" = 'jz' ] ||
  [ "$val" = 'kq' ] || [ "$val" = 'kx' ] || [ "$val" = 'kz' ] ||
  [ "$val" = 'mx' ] || [ "$val" = 'mz' ] || [ "$val" = 'pq' ] ||
  [ "$val" = 'pv' ] || [ "$val" = 'px' ] || [ "$val" = 'qb' ] ||
  [ "$val" = 'qc' ] || [ "$val" = 'qd' ] || [ "$val" = 'qf' ] ||
  [ "$val" = 'qg' ] || [ "$val" = 'qh' ] || [ "$val" = 'qj' ] ||
  [ "$val" = 'qk' ] || [ "$val" = 'ql' ] || [ "$val" = 'qm' ] ||
  [ "$val" = 'qn' ] || [ "$val" = 'qp' ] || [ "$val" = 'qq' ] ||
  [ "$val" = 'qv' ] || [ "$val" = 'qw' ] || [ "$val" = 'qx' ] ||
  [ "$val" = 'qy' ] || [ "$val" = 'qz' ] || [ "$val" = 'sx' ] ||
  [ "$val" = 'tq' ] || [ "$val" = 'vb' ] || [ "$val" = 'vf' ] ||
  [ "$val" = 'vh' ] || [ "$val" = 'vj' ] || [ "$val" = 'vk' ] ||
  [ "$val" = 'vm' ] || [ "$val" = 'vp' ] || [ "$val" = 'vq' ] ||
  [ "$val" = 'vw' ] || [ "$val" = 'vx' ] || [ "$val" = 'wq' ] ||
  [ "$val" = 'wv' ] || [ "$val" = 'wx' ] || [ "$val" = 'xd' ] ||
  [ "$val" = 'xj' ] || [ "$val" = 'xk' ] || [ "$val" = 'xr' ] ||
  [ "$val" = 'xz' ] || [ "$val" = 'yq' ] || [ "$val" = 'yy' ] ||
  [ "$val" = 'zf' ] || [ "$val" = 'zr' ] || [ "$val" = zx ]
  do
    val=$(cat /usr/share/dict/words | cut -c-2 | uniq | shuf -n1 | tr '[:upper:]' '[:lower:]')
  done
  echo "$val"
}

gen_name() {
  # Fairly crappy name generator.
  name=''
  for i in $(seq 1 $(shuf -i 2-4 -n 1)); do
    name="$name$(gen_name_diagram)"
  done
  # Capitalise first letter
  name=$(echo "$name" | awk '{ for ( i=1; i <= NF; i++) { sub(".", substr(toupper($i),1,1) , $i) } print }')
  echo "$name"
}

gen_class() {
  # Choose one of...
  printf '%s\n%s\n%s\n' 'Warrior' 'Wizard' 'Paladin' | shuf -n1
}

intro_text() {
  # Multiple intros. Because.
  printf '%s\n%s\n%s\n%s\n%s\n' \
  'Long ago, when the four winds stood fair, and the forests sang their songs, there was a cave, beneath a castle. From that cave great evil arose, and took the symbol of purity and justice, our fair princess, and vanished into the depths below.' \
  'Before the world we know began, there was another, full of witchcraft, demons, and princesses. One such princess has vanished, dragged into a cave by a great evil.' \
  'Grief has stricken the land. Horror sweeps over the night. Our princess has been stolen, and with her, her protection. No more magic to save us from the ghosts beyond the Demonwall. She was taken, by a great evil, and hidden away in a labyrinth beneath the ground.' \
  'Swords and spears have no strength, when there is no one to send them. Our princess is gone. Evil rose up and stole her. We know where they have taken her... But what madman would be foolish enough to enter the land beneath the ground? Where demons make parlay with something far more twisted and evil?' \
  "From Air, Voice. From Earth, Strength. From Water, Resilience. From Fire, Will. When combined, these four elements give us the Aether, a holy magic designed to protect our world. Only one can channel Aether - our fair princess, protector of all that is just and good... But now there is none. No one to save us from the dark. She was taken, and thrust below, into a world of misery and pain. Into the caves that are the dark's great harbingers." | shuf -n1
}

intro_text2() {
  # Multiple final intro fragments.
  printf '%s\n%s\n%s\n%s\n%s\n' \
    "It was $player_name the $player_class who delved below, to save our hope." \
    "Rising up, it was $player_name, the legendary $player_class, who attacked the dungeon!" \
    "When no one was brave enough, when no one was strong enough, it was $player_name. The $player_class. They took up the challenge." \
    "There was however, one person in the land who was fearless. $player_name, the $player_class." \
    "Into the dark, into caves and labyrinths, only one did tread. $player_name, the $player_class." | shuf -n1
}

event_cave() {
  # Returns a series of lines, in boolean form.
  # Meant to represent the content of a cave.

  # Has treasure?
  shuf -i 1-3 -n 1
  # Has enemy?
  shuf -i 1-3 -n 1
  # Has water?
  shuf -i 1-3 -n 1
  # Has crystalline structures?
  shuf -i 1-3 -n 1
  # Has sunlight?
  shuf -i 1-3 -n 1
  # Has blood?
  shuf -i 1-5 -n 1
  # Has Boss?
  shuf -i 1-100 -n 1
  # Has trace of princess?
  shuf -i 1-50 -n 1
  # Has trace of monster?
  shuf -i 1-50 -n 1
  # Has evil narrator?
  shuf -i 1-10 -n 1
}

title_action() {
  # TODO: ~20 actions.
  printf '%s\n%s\n%s\n%s\n' "'s" \
    ' finds a' \
    ' encounters a' \
    ' hits a' \
    ' goes forth, to' | shuf -n1
}

title_descriptor() {
  # TODO: ~20 descriptors.
  printf '%s\n%s\n%s\n%s\n%s\n%s\n%s\n' 'Great' \
    'Dangerous' \
    'Enormous' \
    'Fantastic' \
    'Brilliant' \
    'Creative' \
    'Joyous' | shuf -n1
}

title_prepender() {
  # TODO: ~20 prepends.
  printf '%s\n%s\n%s\n%s\n' 'Trial' \
    'Hope' \
    'Chance' \
    'Encounter' | shuf -n1
}

random_title() {
  #TODO: This is craaaaaaaaaaaaaaaaaaap.
    echo "$player_name the $player_class$(title_action) $(title_descriptor) $(title_prepender)"
}

# Main

if [ -r 'output' ]; then
  rm 'output'
fi
touch output

echo '% Dungeon Crawl' >> output
echo '' >> output
echo '---' >> output
echo '' >> output

echo 'Generating name...'
player_name=$(gen_name)
echo 'Generating class...'
player_class=$(gen_class)
echo 'Introductory text...'
echo '# Prologue' >> output
echo '' >> output
echo '---' >> output
echo '' >> output
intro_text >> output
intro_text2 >> output

echo 'Beginning main loop...'

# Set the first chapter heading
#TODO: Make this loop to 50,000 again.
while [ "$(wc -w output | awk '{print $1}')" -lt 500 ]; do
  echo 'Setting chapter title...'
  echo '' >> output
  title=$(random_title)
  echo "# $title" >> output
  echo '' >> output
  echo '---' >> output
  echo '' >> output

  echo 'Looping...'
  data=$(event_cave)

  # First, description
  crystals=$(echo "$data" | awk 'BEGIN{ RS = "" ; FS = "\n" }{print $4}')
  echo "Crystals: $crystals"
  if [ "$crystals" = 1 ]; then
    # TODO: ~15 crystal descriptors.
    printf '%s\n%s\n%s\n' 'The walls are studded with gems. ' \
      'The ground is littered with small gemstones, embedded deeply into the rock. ' \
      'Some crystalline structures can be seen lining the walls. ' \
      'The room is brighter, thanks to the white crystal lining the ceiling.' | shuf -n1 | xargs -0 printf '%s ' >> output
  fi

  sunlight=$(echo "$data" | awk 'BEGIN{ RS = "" ; FS = "\n" }{print $5}')
  echo "Sunlight: $sunlight"
  if [ "$sunlight" = 1 ]; then
    # TODO: ~15 light descriptors.
    printf '%s\n%s\n%s\n' 'A small beam of light breaks through from somewhere above, lighting the cave.' \
      'An unknown light illuminates the area.' \
      'A slither of light illuminates the center of the cave.' \
      "There is no need for torchlight here, somehow light from the sun has found it's own way into the depths." | shuf -n1 | xargs -0 printf '%s ' >> output
  fi


  blood=$(echo "$data" | awk 'BEGIN{ RS = "" ; FS = "\n" }{print $6}')
  echo "Blood: $blood"
  if [ "$blood" = 1 ]; then
    #TODO: ~15 blood descriptors.
    printf '%s\n%s\n%s\n' "There's a small trail of blood here." \
      "There's a splash of blood against the wall." \
      'A sharp eye can detect patches of darkened red in the malformed rock. Blood.' | shuf -n1 | xargs -0 printf '%s ' >> output
  fi


  water=$(echo "$data" | awk 'BEGIN{ RS = "" ; FS = "\n" }{print $3}')
  echo "Water: $water"
  if [ "$water" = 1 ]; then
    #TODO: ~15 water descriptors.
    printf '%s\n%s\n%s\n' 'A stream of water winds through the cave.' \
      'Water drips from the ceiling.' \
      'A small stream runs down one wall of the cave.' | shuf -n1 | xargs -0 printf '%s ' >> output
  fi

  # Newline after descriptors.
  echo '' >> output

  # Then fight
  boss=$(echo "$data" | awk 'BEGIN{ RS = "" ; FS = "\n" }{print $7}')
  echo "Boss: $boss"
  enemy=$(echo "$data" | awk 'BEGIN{ RS = "" ; FS = "\n" }{print $2}')
  echo "Enemy: $enemy"
  # Enemies and bosses are mutually exclusive.
  if [ "$boss" = 1 ]; then
    #TODO: ~15 boss fight introductions.
    printf '%s\n%s\n' 'The ground trembles as something approaches out of the dark.' \
      "The hairs on the back of $player_name's neck stand up. There's something here." \
      | shuf -n1 | xargs -0 printf '%s ' >> output
    #TODO: Class-based fight, several rounds. Player should nearly lose.
    if [ "$player_class" = 'Warrior' ]; then
      # Warrior
      #Round 1
      printf '%s\n%s\n%s\n' "Laughter surrounds the cave. A shadow crawls up the wall, before falling before $player_name, the Demon stands tall. So, with a quick blade, $player_name attempts to cut them down to size. The sword bounces harmlessly away. However, the demon's claws don't exactly bounce so much as carve-up the armour of the Warrior, who is tossed into the wall." \
        "With a burst of flame, a Demon appears. Not the creature that $player_name is seeking, but one sent to get in their way. They charge forward, yelling, sword in hand. A billow of flames slams them against the wall of the cave. $player_name lies there, groaning and bleeding, as the Demon approaches." \
        "The ground explodes into a shard of rocks. $player_name raises their shield, fending off the debris, as they gaze into the dust. What stands there, waiting, is nothing less than a Demon. A lord of shadows... But not *the* Demon that $player_name seeks. A lesser creature, sent to be a railroad. With a sigh, the Warrior charges forward. Overconfidence pays it's karma. A tail pierces $player_name's armor, and pierces their flesh like nothing. The tail cracks, and the Warrior slams into the wall." | shuf -n1 | xargs -0 printf '%s ' >> output
      echo '' >> output
      echo '' >> output
      #Round 2, player against wall. Fighting demon.
      printf '%s\n%s\n%s\n' "The demon laughs, spreading it's claws. 'Is this all the surface has to offer? They're greatest warrior?' $player_name staggers upright slowly, glaring, but wasting no energy on words. They stumble forward, sword swinging. The demon knocks it out of their hands without effort." \
        "'Truly, the surface is a world ready to be conquered.' The demon laughs, pointing at the bleeding Warrior, 'What are you? A gnat attacking a dog?' However, the Warrior ignores the insult. They steady their hands, clasping the hilt of their sword, and charge towards the Demon. The creature yawns, and throws a ball of flame, blasting the blade out of $player_name's hands." \
        "The Demon stares at the Warrior in surprise, 'Is that all? All the fight you have to give? How can you hope to win? To save your princess?' $player_name forced themselves to their feet, righting the sword in their hands, 'I wasn't done yet, Demon'. The creature snaps it's tail, knocking the sword flying and embedding it into the cave wall. 'Yes, you are, little creature.'" | shuf -n1 | xargs -0 printf '%s ' >> output
        echo '' >> output
        echo '' >> output
      #Round 3, player is disarmed, injured. Must win.
      printf '%s\n%s\n%s\n' "The Demon places a hand on $player_name's shoulder, 'You must know, you cannot win.' A dagger appears in the Warrior's hand, and then disappears into the Demon's flesh. It howls, pulling backwards, but the Warrior is already leaping, and slamming their small knife into the throat of the monster. It dies slowly." \
        "The Demon crouches in front of the Warrior, 'You cannot-' It is interrupted by a dagger piercing it's eyes, followed up quickly by a slash across the throat. It stumbles backwards, already dying. $player_name smiles grimly." \
        "The Demon picks up the Warrior by their head, smiling, 'How will you win now, little creature?' A dagger, in the hand of $player_name, thrusts into the speaking Demon's throat. They both fall to the ground, but the smaller stands again. The other does not." | shuf -n1 | xargs -0 printf '%s ' >> output
        echo '' >> output
        echo '' >> output
      #Player must recover their sword.
      printf '%s\n%s\n%s\n' "$player_name retrieves their sword." \
        "$player_name takes a moment to gather their things." \
        "The sword slams back into it's sheathe." | shuf -n1 | xargs -0 printf '%s ' >> output
      echo '' >> output
      echo '' >> output
    elif [ "$player_class" = 'Wizard' ]; then
      # Wizard
      # Round 1
      printf '%s\n%s\n%s\n' "$player_name recognised the signs instantly. They'd been in enough summonings-gone-wrong to know when a Demon was about to make their entrance. The gouts of flame bounced harmlessly off the conjured Ward. The Demon looked a bit disappointed for a moment, before unleashing a deafening explosion of flame. $player_name winced, watching their Ward cracking. It buckled. The Wizard was pounded into the wall." \
        "Wizards often speak about the subtelty of magic, about how a small nuance can change the entire flow of magic. Demons, on the other hand, are not subtle. As evidenced by the ground exploding in front of $player_name. The Wizard tossed up a Ward to block the incoming debris, and then fired off another spell, searching for the Demon's name, so they could damn them back to the Underworld. Unfortunately, this somewhat distracted $player_name from the Demon reappearing behind them. Not so much from the finger-flick that propelled them into the opposite cave wall." \
        "A hissing voice, chanting, filled the cave. $player_name yawned for a moment, before casting a weak dispell. It rebounded immediately. The Wizard snapped to attention, eyes shifting rapidly, as they formed a ball of mana between their hands. The Demon obliged by stepping into view, scales, warts and tails. It crossed it's arms, unimpressed. The Wizard yelled, and tossed the ball of fire, which the Demon proceeded to swat back. $player_name was knocked backwards into the cave wall." | shuf -n1 | xargs -0 printf '%s ' >> output
      echo '' >> output
      echo '' >> output
      # TODO: Round 2, player against wall, injured.
      printf '%s\n%s\n%s\n' "" \
        "" \
        "" | shuf -n1 | xargs -0 printf '%s ' >> output
      # TODO: Round 3
      printf '%s\n%s\n%s\n' "" \
        "" \
        "" | shuf -n1 | xargs -0 printf '%s ' >> output
    elif [ "$player_class" = 'Paladin' ]; then
      #TODO: Paladin
      # TODO: Round 1
      printf '%s\n%s\n%s\n' "" \
        "" \
        "" | shuf -n1 | xargs -0 printf '%s ' >> output
      # TODO: Round 2
      printf '%s\n%s\n%s\n' "" \
        "" \
        "" | shuf -n1 | xargs -0 printf '%s ' >> output
      # TODO: Round 3
      printf '%s\n%s\n%s\n' "" \
        "" \
        "" | shuf -n1 | xargs -0 printf '%s ' >> output
    fi
  elif [ "$enemy" = 1 ]; then
    #TODO: ~25 fight introductions.
    printf '%s\n%s\n' "A snarl catches $player_name's attention!" \
      "A flash of movement catches $player_name's attention." \
      'Something growls in the dark.' \
      'There is a silhouette up ahead.' \
      | shuf -n1 | xargs -0 printf '%s ' >> output
    #TODO: Class-based fight, several rounds. Random if player wins outright, or nearly loses.
    if [ "$player_class" = 'Warrior' ]; then
      #TODO: Warrior
      printf '%s\n%s\n%s\n' "" \
        "" \
        "" | shuf -n1 | xargs -0 printf '%s ' >> output
    elif [ "$player_class" = 'Wizard' ]; then
      #TODO: Wizard
      printf '%s\n%s\n%s\n' "" \
        "" \
        "" | shuf -n1 | xargs -0 printf '%s ' >> output
    elif [ "$player_class" = 'Paladin' ]; then
      #TODO: Paladin
      printf '%s\n%s\n%s\n' "" \
        "" \
        "" | shuf -n1 | xargs -0 printf '%s ' >> output
    fi
  fi

  # Then loot
  treasure=$(echo "$data" | awk 'BEGIN{ RS = "" ; FS = "\n" }{print $1}')
  echo "Treasure: $treasure"
  if [ "$treasure" = 1 ]; then
    # TODO: Class-based, random loot, ~25
    printf '' | shuf -n1 | xargs -0 printf '%s ' >> output
    if [ "$player_class" = 'Warrior' ]; then
      #TODO: Warrior
      printf '%s\n%s\n%s\n' "" \
        "" \
        "" | shuf -n1 | xargs -0 printf '%s ' >> output
    elif [ "$player_class" = 'Wizard' ]; then
      #TODO: Wizard
      printf '%s\n%s\n%s\n' "" \
        "" \
        "" | shuf -n1 | xargs -0 printf '%s ' >> output
    elif [ "$player_class" = 'Paladin' ]; then
      #TODO: Paladin
      printf '%s\n%s\n%s\n' "" \
        "" \
        "" | shuf -n1 | xargs -0 printf '%s ' >> output
    fi
  fi

  # Then weird voice guy
  evil_narrator=$(echo "$data" | awk 'BEGIN{ RS = "" ; FS = "\n" }{print $10}')
  echo "Voice: $evil_narrator"
  if [ "$evil_narrator" = 1 ]; then
    #TODO: Random remark about how terrible the player is going. ~50
    printf '%s\n%s\n' "A voice, not quite there, speaks softly. 'Your death was predicted before your birth.'" \
    "Echoing, from some distance, a voice speaks: '$player_name, did you know? That you were doomed even before you began?'" | shuf -n1 | xargs -0 printf '%s ' >> output
  fi

  # Then traces
  trace_of_princess=$(echo "$data" | awk 'BEGIN{ RS = "" ; FS = "\n" }{print $8}')
  echo "Princess: $trace_of_princess"
  trace_of_monster=$(echo "$data" | awk 'BEGIN{ RS = "" ; FS = "\n" }{print $9}')
  echo "Monster: $trace_of_monster"
  # Traces are mutually exclusive.
  if [ "$trace_of_princess" = 1 ]; then
    #TODO: Princess trail ~25
    printf '%s\n' 'There is a scrap of cloth here. Fine, silk. From the dress of no one less than a princess.' \
      "A small stone catches the eye of $player_name. It's a diamond. Knocked loose from some larger arrangement. The princess came this way." | shuf -n1 | xargs -0 printf '%s ' >> output
  elif [ "$trace_of_monster" = 1 ]; then
    #TODO: Monster trail ~25
    printf '%s\n' 'Large claws of gauged away the dirt here. Footprints, of some larger demon.' \
      "$player_name smiled grimly as they saw the clawmarks on the wall. The demon went this way." | shuf -n1 | xargs -0 printf '%s ' >> output
  fi

  # TODO: Then room transition. ~25
  printf '%s\n' "Undaunted, the $player_class heads deeper." \
  "$player_name turns their gaze to the next narrow opening, that joins this cave, to the next." | shuf -n1 | xargs -0 printf '%s ' >> output

  echo '' >> output
  echo '' >> output
done

#TODO: Final monster battle, player has 50/50 succeed, failure.
echo 'Final battle...'
success=$(shuf -i 1-2 -n 1)

if [ "$success" = 1 ]; then
  #TODO: If succeed, player has 50/50 chance of convincing princess to return, or her being the strange voice and eating their soul.
  echo 'Negotiating with princess...'
  evil_princess=$(shuf -i 1-2 -n 1)
  if [ "$evil_princess" = 1 ]; then
    #TODO: 5 ways the princess could murder our main character.
    :
  else
    #TODO: 5 joyous, triumphant returns... Or not so joyous returns.
    :
  fi
else
  #TODO: Player lost. Dead. Try and be sensitive with our readers who just wasted their time.
  # ~5 endings.
  printf '%s\n%s\n%s\n%s\n%s\n' \
    "$player_name lay on the ground, coughing as they drowned in the blood pouring from their shattered frame. It was over. The battle was lost. The princess was gone. Evil would inherit the surface... What evil? Humanity would be expunged... Which meant there was no evil, not anymore. Just the rightful owner taking back what was already theirs. Humanity was the evil. $player_name closed their eyes, for the last time." \
    "$player_name collapsed backwards, staring at the black ceiling, unseeing. Their senses were fading or gone. The last moment, their last moment, was hearing a distant scream, of a dying princess. Of hope dying. Our hope is dead." \
    "The $player_class hit the ground, coughing violently. The monster stood over them, snarling. They couldn't get up. Couldn't fight back. They looked up bleakly, spying the face of a woman they'd idolised, a princess, her face locked in shock and horror. A single tear slid down her cheek. The creature grasped $player_name's head, and wrenched." \
    "A sword of shadow stabbed forward, and through $player_name. They coughed a black bloody mucus onto the ground. The creature sighed heavily, showing a disappointment, whilst in the background a woman whimpers queitly. The sword was jerked free. The $player_class folded onto the ground." \
    "" | shuf -n1 >> output
fi

echo 'Final Size:'
wc -w output

# Build HTML
echo 'Building HTML...'
pandoc --toc --chapters -fmarkdown output -thtml -obuild.html

# Build PDF
echo 'Building pdf...'
pandoc --toc --chapters -fmarkdown output -obuild.pdf

# Build ePub
echo 'Building ePub...'
pandoc --toc --chapters -fmarkdown output -tepub -obuild.epub
